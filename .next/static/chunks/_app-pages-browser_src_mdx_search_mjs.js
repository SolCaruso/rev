/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_src_mdx_search_mjs"],{

/***/ "?5206":
/*!********************************!*\
  !*** worker_threads (ignored) ***!
  \********************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

/* (ignored) */

/***/ }),

/***/ "(app-pages-browser)/./node_modules/flexsearch/dist/flexsearch.bundle.module.min.js":
/*!**********************************************************************!*\
  !*** ./node_modules/flexsearch/dist/flexsearch.bundle.module.min.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("var __dirname = \"/\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**!\r\n * FlexSearch.js v0.7.41 (Bundle.module)\r\n * Author and Copyright: Thomas Wilkerling\r\n * Licence: Apache-2.0\r\n * Hosted by Nextapps GmbH\r\n * https://github.com/nextapps-de/flexsearch\r\n */\nvar t;function u(a){return\"undefined\"!==typeof a?a:!0}function v(a){const b=Array(a);for(let c=0;c<a;c++)b[c]=x();return b}function x(){return Object.create(null)}function aa(a,b){return b.length-a.length}function C(a){return\"string\"===typeof a}function D(a){return\"object\"===typeof a}function E(a){return\"function\"===typeof a};function F(a,b){var c=ba;if(a&&(b&&(a=G(a,b)),this.H&&(a=G(a,this.H)),this.J&&1<a.length&&(a=G(a,this.J)),c||\"\"===c)){b=a.split(c);if(this.filter){a=this.filter;c=b.length;const d=[];for(let e=0,f=0;e<c;e++){const h=b[e];h&&!a[h]&&(d[f++]=h)}a=d}else a=b;return a}return a}const ba=/[\\p{Z}\\p{S}\\p{P}\\p{C}]+/u,ca=/[\\u0300-\\u036f]/g;\nfunction I(a,b){const c=Object.keys(a),d=c.length,e=[];let f=\"\",h=0;for(let g=0,k,m;g<d;g++)k=c[g],(m=a[k])?(e[h++]=J(b?\"(?!\\\\b)\"+k+\"(\\\\b|_)\":k),e[h++]=m):f+=(f?\"|\":\"\")+k;f&&(e[h++]=J(b?\"(?!\\\\b)(\"+f+\")(\\\\b|_)\":\"(\"+f+\")\"),e[h]=\"\");return e}function G(a,b){for(let c=0,d=b.length;c<d&&(a=a.replace(b[c],b[c+1]),a);c+=2);return a}function J(a){return new RegExp(a,\"g\")}function da(a){let b=\"\",c=\"\";for(let d=0,e=a.length,f;d<e;d++)(f=a[d])!==c&&(b+=c=f);return b};var fa={encode:ea,F:!1,G:\"\"};function ea(a){return F.call(this,(\"\"+a).toLowerCase(),!1)};const ha={},K={};function ia(a){L(a,\"add\");L(a,\"append\");L(a,\"search\");L(a,\"update\");L(a,\"remove\")}function L(a,b){a[b+\"Async\"]=function(){const c=this,d=arguments;var e=d[d.length-1];let f;E(e)&&(f=e,delete d[d.length-1]);e=new Promise(function(h){setTimeout(function(){c.async=!0;const g=c[b].apply(c,d);c.async=!1;h(g)})});return f?(e.then(f),this):e}};function ja(a,b,c,d){const e=a.length;let f=[],h,g,k=0;d&&(d=[]);for(let m=e-1;0<=m;m--){const n=a[m],w=n.length,q=x();let r=!h;for(let l=0;l<w;l++){const p=n[l],A=p.length;if(A)for(let B=0,z,y;B<A;B++)if(y=p[B],h){if(h[y]){if(!m)if(c)c--;else if(f[k++]=y,k===b)return f;if(m||d)q[y]=1;r=!0}if(d&&(z=(g[y]||0)+1,g[y]=z,z<e)){const H=d[z-2]||(d[z-2]=[]);H[H.length]=y}}else q[y]=1}if(d)h||(g=q);else if(!r)return[];h=q}if(d)for(let m=d.length-1,n,w;0<=m;m--){n=d[m];w=n.length;for(let q=0,r;q<w;q++)if(r=\nn[q],!h[r]){if(c)c--;else if(f[k++]=r,k===b)return f;h[r]=1}}return f}function ka(a,b){const c=x(),d=x(),e=[];for(let f=0;f<a.length;f++)c[a[f]]=1;for(let f=0,h;f<b.length;f++){h=b[f];for(let g=0,k;g<h.length;g++)k=h[g],c[k]&&!d[k]&&(d[k]=1,e[e.length]=k)}return e};function M(a){this.l=!0!==a&&a;this.cache=x();this.h=[]}function la(a,b,c){D(a)&&(a=a.query);let d=this.cache.get(a);d||(d=this.search(a,b,c),this.cache.set(a,d));return d}M.prototype.set=function(a,b){if(!this.cache[a]){var c=this.h.length;c===this.l?delete this.cache[this.h[c-1]]:c++;for(--c;0<c;c--)this.h[c]=this.h[c-1];this.h[0]=a}this.cache[a]=b};M.prototype.get=function(a){const b=this.cache[a];if(this.l&&b&&(a=this.h.indexOf(a))){const c=this.h[a-1];this.h[a-1]=this.h[a];this.h[a]=c}return b};const na={memory:{charset:\"latin:extra\",D:3,B:4,m:!1},performance:{D:3,B:3,s:!1,context:{depth:2,D:1}},match:{charset:\"latin:extra\",G:\"reverse\"},score:{charset:\"latin:advanced\",D:20,B:3,context:{depth:3,D:9}},\"default\":{}};function oa(a,b,c,d,e,f,h,g){setTimeout(function(){const k=a(c?c+\".\"+d:d,JSON.stringify(h));k&&k.then?k.then(function(){b.export(a,b,c,e,f+1,g)}):b.export(a,b,c,e,f+1,g)})};function N(a,b){if(!(this instanceof N))return new N(a);var c;if(a){C(a)?a=na[a]:(c=a.preset)&&(a=Object.assign({},c[c],a));c=a.charset;var d=a.lang;C(c)&&(-1===c.indexOf(\":\")&&(c+=\":default\"),c=K[c]);C(d)&&(d=ha[d])}else a={};let e,f,h=a.context||{};this.encode=a.encode||c&&c.encode||ea;this.register=b||x();this.D=e=a.resolution||9;this.G=b=c&&c.G||a.tokenize||\"strict\";this.depth=\"strict\"===b&&h.depth;this.l=u(h.bidirectional);this.s=f=u(a.optimize);this.m=u(a.fastupdate);this.B=a.minlength||1;this.C=\na.boost;this.map=f?v(e):x();this.A=e=h.resolution||1;this.h=f?v(e):x();this.F=c&&c.F||a.rtl;this.H=(b=a.matcher||d&&d.H)&&I(b,!1);this.J=(b=a.stemmer||d&&d.J)&&I(b,!0);if(c=b=a.filter||d&&d.filter){c=b;d=x();for(let g=0,k=c.length;g<k;g++)d[c[g]]=1;c=d}this.filter=c;this.cache=(b=a.cache)&&new M(b)}t=N.prototype;t.append=function(a,b){return this.add(a,b,!0)};\nt.add=function(a,b,c,d){if(b&&(a||0===a)){if(!d&&!c&&this.register[a])return this.update(a,b);b=this.encode(b);if(d=b.length){const m=x(),n=x(),w=this.depth,q=this.D;for(let r=0;r<d;r++){let l=b[this.F?d-1-r:r];var e=l.length;if(l&&e>=this.B&&(w||!n[l])){var f=O(q,d,r),h=\"\";switch(this.G){case \"full\":if(2<e){for(f=0;f<e;f++)for(var g=e;g>f;g--)if(g-f>=this.B){var k=O(q,d,r,e,f);h=l.substring(f,g);P(this,n,h,k,a,c)}break}case \"reverse\":if(1<e){for(g=e-1;0<g;g--)h=l[g]+h,h.length>=this.B&&P(this,n,\nh,O(q,d,r,e,g),a,c);h=\"\"}case \"forward\":if(1<e){for(g=0;g<e;g++)h+=l[g],h.length>=this.B&&P(this,n,h,f,a,c);break}default:if(this.C&&(f=Math.min(f/this.C(b,l,r)|0,q-1)),P(this,n,l,f,a,c),w&&1<d&&r<d-1)for(e=x(),h=this.A,f=l,g=Math.min(w+1,d-r),e[f]=1,k=1;k<g;k++)if((l=b[this.F?d-1-r-k:r+k])&&l.length>=this.B&&!e[l]){e[l]=1;const p=this.l&&l>f;P(this,m,p?f:l,O(h+(d/2>h?0:1),d,r,g-1,k-1),a,c,p?l:f)}}}}this.m||(this.register[a]=1)}}return this};\nfunction O(a,b,c,d,e){return c&&1<a?b+(d||0)<=a?c+(e||0):(a-1)/(b+(d||0))*(c+(e||0))+1|0:0}function P(a,b,c,d,e,f,h){let g=h?a.h:a.map;if(!b[c]||h&&!b[c][h])a.s&&(g=g[d]),h?(b=b[c]||(b[c]=x()),b[h]=1,g=g[h]||(g[h]=x())):b[c]=1,g=g[c]||(g[c]=[]),a.s||(g=g[d]||(g[d]=[])),f&&g.includes(e)||(g[g.length]=e,a.m&&(a=a.register[e]||(a.register[e]=[]),a[a.length]=g))}\nt.search=function(a,b,c){c||(!b&&D(a)?(c=a,a=c.query):D(b)&&(c=b));let d=[],e;let f,h=0;if(c){a=c.query||a;b=c.limit;h=c.offset||0;var g=c.context;f=c.suggest}if(a&&(a=this.encode(\"\"+a),e=a.length,1<e)){c=x();var k=[];for(let n=0,w=0,q;n<e;n++)if((q=a[n])&&q.length>=this.B&&!c[q])if(this.s||f||this.map[q])k[w++]=q,c[q]=1;else return d;a=k;e=a.length}if(!e)return d;b||(b=100);g=this.depth&&1<e&&!1!==g;c=0;let m;g?(m=a[0],c=1):1<e&&a.sort(aa);for(let n,w;c<e;c++){w=a[c];g?(n=pa(this,d,f,b,h,2===e,w,\nm),f&&!1===n&&d.length||(m=w)):n=pa(this,d,f,b,h,1===e,w);if(n)return n;if(f&&c===e-1){k=d.length;if(!k){if(g){g=0;c=-1;continue}return d}if(1===k)return qa(d[0],b,h)}}return ja(d,b,h,f)};\nfunction pa(a,b,c,d,e,f,h,g){let k=[],m=g?a.h:a.map;a.s||(m=ra(m,h,g,a.l));if(m){let n=0;const w=Math.min(m.length,g?a.A:a.D);for(let q=0,r=0,l,p;q<w;q++)if(l=m[q])if(a.s&&(l=ra(l,h,g,a.l)),e&&l&&f&&(p=l.length,p<=e?(e-=p,l=null):(l=l.slice(e),e=0)),l&&(k[n++]=l,f&&(r+=l.length,r>=d)))break;if(n){if(f)return qa(k,d,0);b[b.length]=k;return}}return!c&&k}function qa(a,b,c){a=1===a.length?a[0]:[].concat.apply([],a);return c||a.length>b?a.slice(c,c+b):a}\nfunction ra(a,b,c,d){c?(d=d&&b>c,a=(a=a[d?b:c])&&a[d?c:b]):a=a[b];return a}t.contain=function(a){return!!this.register[a]};t.update=function(a,b){return this.remove(a).add(a,b)};\nt.remove=function(a,b){const c=this.register[a];if(c){if(this.m)for(let d=0,e;d<c.length;d++)e=c[d],e.splice(e.indexOf(a),1);else Q(this.map,a,this.D,this.s),this.depth&&Q(this.h,a,this.A,this.s);b||delete this.register[a];if(this.cache){b=this.cache;for(let d=0,e,f;d<b.h.length;d++)f=b.h[d],e=b.cache[f],e.includes(a)&&(b.h.splice(d--,1),delete b.cache[f])}}return this};\nfunction Q(a,b,c,d,e){let f=0;if(a.constructor===Array)if(e)b=a.indexOf(b),-1!==b?1<a.length&&(a.splice(b,1),f++):f++;else{e=Math.min(a.length,c);for(let h=0,g;h<e;h++)if(g=a[h])f=Q(g,b,c,d,e),d||f||delete a[h]}else for(let h in a)(f=Q(a[h],b,c,d,e))||delete a[h];return f}t.searchCache=la;\nt.export=function(a,b,c,d,e,f){let h=!0;\"undefined\"===typeof f&&(h=new Promise(m=>{f=m}));let g,k;switch(e||(e=0)){case 0:g=\"reg\";if(this.m){k=x();for(let m in this.register)k[m]=1}else k=this.register;break;case 1:g=\"cfg\";k={doc:0,opt:this.s?1:0};break;case 2:g=\"map\";k=this.map;break;case 3:g=\"ctx\";k=this.h;break;default:\"undefined\"===typeof c&&f&&f();return}oa(a,b||this,c,g,d,e,k,f);return h};\nt.import=function(a,b){if(b)switch(C(b)&&(b=JSON.parse(b)),a){case \"cfg\":this.s=!!b.opt;break;case \"reg\":this.m=!1;this.register=b;break;case \"map\":this.map=b;break;case \"ctx\":this.h=b}};ia(N.prototype);function sa(a){a=a.data;var b=self._index;const c=a.args;var d=a.task;switch(d){case \"init\":d=a.options||{};a=a.factory;b=d.encode;d.cache=!1;b&&0===b.indexOf(\"function\")&&(d.encode=Function(\"return \"+b)());a?(Function(\"return \"+a)()(self),self._index=new self.FlexSearch.Index(d),delete self.FlexSearch):self._index=new N(d);break;default:a=a.id,b=b[d].apply(b,c),postMessage(\"search\"===d?{id:a,msg:b}:{id:a})}};let ta=0;function S(a){if(!(this instanceof S))return new S(a);var b;a?E(b=a.encode)&&(a.encode=b.toString()):a={};(b=(self||window)._factory)&&(b=b.toString());const c=\"undefined\"===typeof window&&self.exports,d=this;this.o=ua(b,c,a.worker);this.h=x();if(this.o){if(c)this.o.on(\"message\",function(e){d.h[e.id](e.msg);delete d.h[e.id]});else this.o.onmessage=function(e){e=e.data;d.h[e.id](e.msg);delete d.h[e.id]};this.o.postMessage({task:\"init\",factory:b,options:a})}}T(\"add\");T(\"append\");T(\"search\");\nT(\"update\");T(\"remove\");function T(a){S.prototype[a]=S.prototype[a+\"Async\"]=function(){const b=this,c=[].slice.call(arguments);var d=c[c.length-1];let e;E(d)&&(e=d,c.splice(c.length-1,1));d=new Promise(function(f){setTimeout(function(){b.h[++ta]=f;b.o.postMessage({task:a,id:ta,args:c})})});return e?(d.then(e),this):d}}\nfunction ua(a,b,c){let d;try{d=b?new ((__webpack_require__(/*! worker_threads */ \"?5206\").Worker))(__dirname + \"/node/node.js\"):a?new Worker(URL.createObjectURL(new Blob([\"onmessage=\"+sa.toString()],{type:\"text/javascript\"}))):new Worker(C(c)?c:\"worker/worker.js\",{type:\"module\"})}catch(e){}return d};function U(a){if(!(this instanceof U))return new U(a);var b=a.document||a.doc||a,c;this.K=[];this.h=[];this.A=[];this.register=x();this.key=(c=b.key||b.id)&&V(c,this.A)||\"id\";this.m=u(a.fastupdate);this.C=(c=b.store)&&!0!==c&&[];this.store=c&&x();this.I=(c=b.tag)&&V(c,this.A);this.l=c&&x();this.cache=(c=a.cache)&&new M(c);a.cache=!1;this.o=a.worker;this.async=!1;c=x();let d=b.index||b.field||b;C(d)&&(d=[d]);for(let e=0,f,h;e<d.length;e++)f=d[e],C(f)||(h=f,f=f.field),h=D(h)?Object.assign({},a,h):a,\nthis.o&&(c[f]=new S(h),c[f].o||(this.o=!1)),this.o||(c[f]=new N(h,this.register)),this.K[e]=V(f,this.A),this.h[e]=f;if(this.C)for(a=b.store,C(a)&&(a=[a]),b=0;b<a.length;b++)this.C[b]=V(a[b],this.A);this.index=c}function V(a,b){const c=a.split(\":\");let d=0;for(let e=0;e<c.length;e++)a=c[e],0<=a.indexOf(\"[]\")&&(a=a.substring(0,a.length-2))&&(b[d]=!0),a&&(c[d++]=a);d<c.length&&(c.length=d);return 1<d?c:c[0]}function X(a,b){if(C(b))a=a[b];else for(let c=0;a&&c<b.length;c++)a=a[b[c]];return a}\nfunction Y(a,b,c,d,e){a=a[e];if(d===c.length-1)b[e]=a;else if(a)if(a.constructor===Array)for(b=b[e]=Array(a.length),e=0;e<a.length;e++)Y(a,b,c,d,e);else b=b[e]||(b[e]=x()),e=c[++d],Y(a,b,c,d,e)}function Z(a,b,c,d,e,f,h,g){if(a=a[h])if(d===b.length-1){if(a.constructor===Array){if(c[d]){for(b=0;b<a.length;b++)e.add(f,a[b],!0,!0);return}a=a.join(\" \")}e.add(f,a,g,!0)}else if(a.constructor===Array)for(h=0;h<a.length;h++)Z(a,b,c,d,e,f,h,g);else h=b[++d],Z(a,b,c,d,e,f,h,g)}t=U.prototype;\nt.add=function(a,b,c){D(a)&&(b=a,a=X(b,this.key));if(b&&(a||0===a)){if(!c&&this.register[a])return this.update(a,b);for(let d=0,e,f;d<this.h.length;d++)f=this.h[d],e=this.K[d],C(e)&&(e=[e]),Z(b,e,this.A,0,this.index[f],a,e[0],c);if(this.I){let d=X(b,this.I),e=x();C(d)&&(d=[d]);for(let f=0,h,g;f<d.length;f++)if(h=d[f],!e[h]&&(e[h]=1,g=this.l[h]||(this.l[h]=[]),!c||!g.includes(a)))if(g[g.length]=a,this.m){const k=this.register[a]||(this.register[a]=[]);k[k.length]=g}}if(this.store&&(!c||!this.store[a])){let d;\nif(this.C){d=x();for(let e=0,f;e<this.C.length;e++)f=this.C[e],C(f)?d[f]=b[f]:Y(b,d,f,0,f[0])}this.store[a]=d||b}}return this};t.append=function(a,b){return this.add(a,b,!0)};t.update=function(a,b){return this.remove(a).add(a,b)};\nt.remove=function(a){D(a)&&(a=X(a,this.key));if(this.register[a]){for(var b=0;b<this.h.length&&(this.index[this.h[b]].remove(a,!this.o),!this.m);b++);if(this.I&&!this.m)for(let c in this.l){b=this.l[c];const d=b.indexOf(a);-1!==d&&(1<b.length?b.splice(d,1):delete this.l[c])}this.store&&delete this.store[a];delete this.register[a]}return this};\nt.search=function(a,b,c,d){c||(!b&&D(a)?(c=a,a=\"\"):D(b)&&(c=b,b=0));let e=[],f=[],h,g,k,m,n,w,q=0;if(c)if(c.constructor===Array)k=c,c=null;else{a=c.query||a;k=(h=c.pluck)||c.index||c.field;m=c.tag;g=this.store&&c.enrich;n=\"and\"===c.bool;b=c.limit||b||100;w=c.offset||0;if(m&&(C(m)&&(m=[m]),!a)){for(let l=0,p;l<m.length;l++)if(p=va.call(this,m[l],b,w,g))e[e.length]=p,q++;return q?e:[]}C(k)&&(k=[k])}k||(k=this.h);n=n&&(1<k.length||m&&1<m.length);const r=!d&&(this.o||this.async)&&[];for(let l=0,p,A,B;l<\nk.length;l++){let z;A=k[l];C(A)||(z=A,A=z.field,a=z.query||a,b=z.limit||b,g=z.enrich||g);if(r)r[l]=this.index[A].searchAsync(a,b,z||c);else{d?p=d[l]:p=this.index[A].search(a,b,z||c);B=p&&p.length;if(m&&B){const y=[];let H=0;n&&(y[0]=[p]);for(let W=0,ma,R;W<m.length;W++)if(ma=m[W],B=(R=this.l[ma])&&R.length)H++,y[y.length]=n?[R]:R;H&&(p=n?ja(y,b||100,w||0):ka(p,y),B=p.length)}if(B)f[q]=A,e[q++]=p;else if(n)return[]}}if(r){const l=this;return new Promise(function(p){Promise.all(r).then(function(A){p(l.search(a,\nb,c,A))})})}if(!q)return[];if(h&&(!g||!this.store))return e[0];for(let l=0,p;l<f.length;l++){p=e[l];p.length&&g&&(p=wa.call(this,p));if(h)return p;e[l]={field:f[l],result:p}}return e};function va(a,b,c,d){let e=this.l[a],f=e&&e.length-c;if(f&&0<f){if(f>b||c)e=e.slice(c,c+b);d&&(e=wa.call(this,e));return{tag:a,result:e}}}function wa(a){const b=Array(a.length);for(let c=0,d;c<a.length;c++)d=a[c],b[c]={id:d,doc:this.store[d]};return b}t.contain=function(a){return!!this.register[a]};t.get=function(a){return this.store[a]};\nt.set=function(a,b){this.store[a]=b;return this};t.searchCache=la;t.export=function(a,b,c,d,e,f){let h;\"undefined\"===typeof f&&(h=new Promise(g=>{f=g}));e||(e=0);d||(d=0);if(d<this.h.length){const g=this.h[d],k=this.index[g];b=this;setTimeout(function(){k.export(a,b,e?g:\"\",d,e++,f)||(d++,e=1,b.export(a,b,g,d,e,f))})}else{let g,k;switch(e){case 1:g=\"tag\";k=this.l;c=null;break;case 2:g=\"store\";k=this.store;c=null;break;default:f();return}oa(a,this,c,g,d,e,k,f)}return h};\nt.import=function(a,b){if(b)switch(C(b)&&(b=JSON.parse(b)),a){case \"tag\":this.l=b;break;case \"reg\":this.m=!1;this.register=b;for(let d=0,e;d<this.h.length;d++)e=this.index[this.h[d]],e.register=b,e.m=!1;break;case \"store\":this.store=b;break;default:a=a.split(\".\");const c=a[0];a=a[1];c&&a&&this.index[c].import(a,b)}};ia(U.prototype);var ya={encode:xa,F:!1,G:\"\"};const za=[J(\"[\\u00e0\\u00e1\\u00e2\\u00e3\\u00e4\\u00e5]\"),\"a\",J(\"[\\u00e8\\u00e9\\u00ea\\u00eb]\"),\"e\",J(\"[\\u00ec\\u00ed\\u00ee\\u00ef]\"),\"i\",J(\"[\\u00f2\\u00f3\\u00f4\\u00f5\\u00f6\\u0151]\"),\"o\",J(\"[\\u00f9\\u00fa\\u00fb\\u00fc\\u0171]\"),\"u\",J(\"[\\u00fd\\u0177\\u00ff]\"),\"y\",J(\"\\u00f1\"),\"n\",J(\"[\\u00e7c]\"),\"k\",J(\"\\u00df\"),\"s\",J(\" & \"),\" and \"];function xa(a){var b=a=\"\"+a;b.normalize&&(b=b.normalize(\"NFD\").replace(ca,\"\"));return F.call(this,b.toLowerCase(),!a.normalize&&za)};var Ba={encode:Aa,F:!1,G:\"strict\"};const Ca=/[^a-z0-9]+/,Da={b:\"p\",v:\"f\",w:\"f\",z:\"s\",x:\"s\",\"\\u00df\":\"s\",d:\"t\",n:\"m\",c:\"k\",g:\"k\",j:\"k\",q:\"k\",i:\"e\",y:\"e\",u:\"o\"};function Aa(a){a=xa.call(this,a).join(\" \");const b=[];if(a){const c=a.split(Ca),d=c.length;for(let e=0,f,h=0;e<d;e++)if((a=c[e])&&(!this.filter||!this.filter[a])){f=a[0];let g=Da[f]||f,k=g;for(let m=1;m<a.length;m++){f=a[m];const n=Da[f]||f;n&&n!==k&&(g+=n,k=n)}b[h++]=g}}return b};var Fa={encode:Ea,F:!1,G:\"\"};const Ga=[J(\"ae\"),\"a\",J(\"oe\"),\"o\",J(\"sh\"),\"s\",J(\"th\"),\"t\",J(\"ph\"),\"f\",J(\"pf\"),\"f\",J(\"(?![aeo])h(?![aeo])\"),\"\",J(\"(?!^[aeo])h(?!^[aeo])\"),\"\"];function Ea(a,b){a&&(a=Aa.call(this,a).join(\" \"),2<a.length&&(a=G(a,Ga)),b||(1<a.length&&(a=da(a)),a&&(a=a.split(\" \"))));return a||[]};var Ia={encode:Ha,F:!1,G:\"\"};const Ja=J(\"(?!\\\\b)[aeo]\");function Ha(a){a&&(a=Ea.call(this,a,!0),1<a.length&&(a=a.replace(Ja,\"\")),1<a.length&&(a=da(a)),a&&(a=a.split(\" \")));return a||[]};K[\"latin:default\"]=fa;K[\"latin:simple\"]=ya;K[\"latin:balance\"]=Ba;K[\"latin:advanced\"]=Fa;K[\"latin:extra\"]=Ia;/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({Index:N,Document:U,Worker:S,registerCharset:function(a,b){K[a]=b},registerLanguage:function(a,b){ha[a]=b}});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/flexsearch/dist/flexsearch.bundle.module.min.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/mdx/search.mjs":
/*!****************************!*\
  !*** ./src/mdx/search.mjs ***!
  \****************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   search: () => (/* binding */ search)\n/* harmony export */ });\n/* harmony import */ var flexsearch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! flexsearch */ \"(app-pages-browser)/./node_modules/flexsearch/dist/flexsearch.bundle.module.min.js\");\n\nlet sectionIndex = new flexsearch__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Document({\n    tokenize: 'full',\n    document: {\n        id: 'url',\n        index: 'content',\n        store: [\n            'title',\n            'pageTitle'\n        ]\n    },\n    context: {\n        resolution: 9,\n        depth: 2,\n        bidirectional: true\n    }\n});\nlet data = [\n    {\n        \"url\": \"/docs\",\n        \"sections\": [\n            [\n                \"API Documentation\",\n                null,\n                [\n                    \"Use the Protocol API to access contacts, conversations, group messages, and more and seamlessly integrate your product into the workflows of dozens of devoted Protocol users. \",\n                    \"Quickstart\",\n                    \"Explore SDKs\"\n                ]\n            ],\n            [\n                \"Getting started \",\n                \"getting-started\",\n                [\n                    \"To get started, create a new application in your developer settings, then read about how to make requests for the resources you need to access using our HTTP APIs or dedicated client SDKs. When your integration is ready to go live, publish it to our integrations directory to reach the Protocol community. \",\n                    \"Get your API key\"\n                ]\n            ]\n        ]\n    },\n    {\n        \"url\": \"/docs/attachments\",\n        \"sections\": [\n            [\n                \"Attachments\",\n                null,\n                [\n                    \"Attachments are how you share things in Protocol — they allow you to send all sorts of files to your contacts and groups. On this page, we'll dive into the different attachment endpoints you can use to manage attachments programmatically. We'll look at how to query, upload, update, and delete attachments. \"\n                ]\n            ],\n            [\n                \"The attachment model\",\n                \"the-attachment-model\",\n                [\n                    \"The attachment model contains all the information about the files you send to your contacts and groups, including the name, type, and size.\",\n                    \"Properties\",\n                    \"Unique identifier for the attachment.\",\n                    \"Unique identifier for the message associated with the attachment.\",\n                    \"The filename for the attachment.\",\n                    \"The URL for the attached file.\",\n                    \"The MIME type of the attached file.\",\n                    \"The file size of the attachment in bytes.\",\n                    \"Timestamp of when the attachment was created.\"\n                ]\n            ],\n            [\n                \"List all attachments \",\n                \"list-all-attachments\",\n                [\n                    \"This endpoint allows you to retrieve a paginated list of all your attachments (in a conversation if a conversation id is provided). By default, a maximum of ten attachments are shown per page.\",\n                    \"Optional attributes\",\n                    \"Limit to attachments from a given conversation.\",\n                    \"Limit the number of attachments returned.\"\n                ]\n            ],\n            [\n                \"Create an attachment \",\n                \"create-an-attachment\",\n                [\n                    \"This endpoint allows you to upload a new attachment to a conversation. See the code examples for how to send the file to the Protocol API.\",\n                    \"Required attributes\",\n                    \"The file you want to add as an attachment.\"\n                ]\n            ],\n            [\n                \"Retrieve an attachment \",\n                \"retrieve-an-attachment\",\n                [\n                    \"This endpoint allows you to retrieve an attachment by providing the attachment id. Refer to the list at the top of this page to see which properties are included with attachment objects.\"\n                ]\n            ],\n            [\n                \"Update an attachment \",\n                \"update-an-attachment\",\n                [\n                    \"This endpoint allows you to perform an update on an attachment. Currently, the only supported type of update is changing the filename.\",\n                    \"Optional attributes\",\n                    \"The new filename for the attachment.\"\n                ]\n            ],\n            [\n                \"Delete an attachment \",\n                \"delete-an-attachment\",\n                [\n                    \"This endpoint allows you to delete attachments. Note: This will permanently delete the file.\"\n                ]\n            ]\n        ]\n    },\n    {\n        \"url\": \"/docs/authentication\",\n        \"sections\": [\n            [\n                \"Authentication\",\n                null,\n                [\n                    \"You'll need to authenticate your requests to access any of the endpoints in the Protocol API. In this guide, we'll look at how authentication works. Protocol offers two ways to authenticate your API requests: Basic authentication and OAuth2 with a token — OAuth2 is the recommended way. \"\n                ]\n            ],\n            [\n                \"Basic authentication\",\n                \"basic-authentication\",\n                [\n                    \"With basic authentication, you use your username and password to authenticate your HTTP requests. Unless you have a very good reason, you probably shouldn't use basic auth. Here's how to authenticate using cURL:\",\n                    \"Please don't commit your Protocol password to GitHub!\"\n                ]\n            ],\n            [\n                \"OAuth2 with bearer token\",\n                \"o-auth2-with-bearer-token\",\n                [\n                    \"The recommended way to authenticate with the Protocol API is by using OAuth2. When establishing a connection using OAuth2, you will need your access token — you will find it in the Protocol dashboard under API settings. Here's how to add the token to the request header using cURL:\",\n                    \"Always keep your token safe and reset it if you suspect it has been compromised.\"\n                ]\n            ],\n            [\n                \"Using an SDK\",\n                \"using-an-sdk\",\n                [\n                    \"If you use one of our official SDKs, you won't have to worry about any of the above — fetch your access token from the Protocol dashboard under API settings, and the client library will take care of the rest. All the client libraries use OAuth2 behind the scenes.\",\n                    \"Check out our list of first-party SDKs\"\n                ]\n            ]\n        ]\n    },\n    {\n        \"url\": \"/docs/contacts\",\n        \"sections\": [\n            [\n                \"Contacts\",\n                null,\n                [\n                    \"As the name suggests, contacts are a core part of Protocol — the very reason Protocol exists is so you can have secure conversations with your contacts. On this page, we'll dive into the different contact endpoints you can use to manage contacts programmatically. We'll look at how to query, create, update, and delete contacts. \"\n                ]\n            ],\n            [\n                \"The contact model\",\n                \"the-contact-model\",\n                [\n                    \"The contact model contains all the information about your contacts, such as their username, avatar, and phone number. It also contains a reference to the conversation between you and the contact and information about when they were last active on Protocol.\",\n                    \"Properties\",\n                    \"Unique identifier for the contact.\",\n                    \"The username for the contact.\",\n                    \"The phone number for the contact.\",\n                    \"The avatar image URL for the contact.\",\n                    \"The contact display name in the contact list. By default, this is just the\\nusername.\",\n                    \"Unique identifier for the conversation associated with the contact.\",\n                    \"Timestamp of when the contact was last active on the platform.\",\n                    \"Timestamp of when the contact was created.\"\n                ]\n            ],\n            [\n                \"List all contacts \",\n                \"list-all-contacts\",\n                [\n                    \"This endpoint allows you to retrieve a paginated list of all your contacts. By default, a maximum of ten contacts are shown per page.\",\n                    \"Optional attributes\",\n                    \"Limit the number of contacts returned.\"\n                ]\n            ],\n            [\n                \"Create a contact \",\n                \"create-a-contact\",\n                [\n                    \"This endpoint allows you to add a new contact to your contact list in Protocol. To add a contact, you must provide their Protocol username and phone number.\",\n                    \"Required attributes\",\n                    \"The username for the contact.\",\n                    \"The phone number for the contact.\",\n                    \"Optional attributes\",\n                    \"The avatar image URL for the contact.\",\n                    \"The contact display name in the contact list. By default, this is just the username.\"\n                ]\n            ],\n            [\n                \"Retrieve a contact \",\n                \"retrieve-a-contact\",\n                [\n                    \"This endpoint allows you to retrieve a contact by providing their Protocol id. Refer to the list at the top of this page to see which properties are included with contact objects.\"\n                ]\n            ],\n            [\n                \"Update a contact \",\n                \"update-a-contact\",\n                [\n                    \"This endpoint allows you to perform an update on a contact. Currently, the only attribute that can be updated on contacts is the display_name attribute which controls how a contact appears in your contact list in Protocol.\",\n                    \"Optional attributes\",\n                    \"The contact display name in the contact list. By default, this is just the username.\"\n                ]\n            ],\n            [\n                \"Delete a contact \",\n                \"delete-a-contact\",\n                [\n                    \"This endpoint allows you to delete contacts from your contact list in Protocol. Note: This will also delete your conversation with the given contact.\"\n                ]\n            ]\n        ]\n    },\n    {\n        \"url\": \"/docs/conversations\",\n        \"sections\": [\n            [\n                \"Conversations\",\n                null,\n                [\n                    \"Conversations are an essential part of Protocol — they are the containers for the messages between you, your contacts, and groups. On this page, we’ll dive into the different conversation endpoints you can use to manage conversations programmatically. We'll look at how to query, create, update, and delete conversations. \"\n                ]\n            ],\n            [\n                \"The conversation model\",\n                \"the-conversation-model\",\n                [\n                    \"The conversation model contains all the information about the conversations between you and your contacts. In addition, conversations can also be group-based with more than one contact, they can have a pinned message, and they can be muted.\",\n                    \"Properties\",\n                    \"Unique identifier for the conversation.\",\n                    \"Unique identifier for the other contact in the conversation.\",\n                    \"Unique identifier for the group that the conversation belongs to.\",\n                    \"Unique identifier for the pinned message.\",\n                    \"Whether or not the conversation has been pinned.\",\n                    \"Whether or not the conversation has been muted.\",\n                    \"Timestamp of when the conversation was last active.\",\n                    \"Timestamp of when the conversation was last opened by the authenticated\\nuser.\",\n                    \"Timestamp of when the conversation was created.\",\n                    \"Timestamp of when the conversation was archived.\"\n                ]\n            ],\n            [\n                \"List all conversations \",\n                \"list-all-conversations\",\n                [\n                    \"This endpoint allows you to retrieve a paginated list of all your conversations. By default, a maximum of ten conversations are shown per page.\",\n                    \"Optional attributes\",\n                    \"Limit the number of conversations returned.\",\n                    \"Only show conversations that are muted when set to true.\",\n                    \"Only show conversations that are archived when set to true.\",\n                    \"Only show conversations that are pinned when set to true.\",\n                    \"Only show conversations for the specified group.\"\n                ]\n            ],\n            [\n                \"Create a conversation \",\n                \"create-a-conversation\",\n                [\n                    \"This endpoint allows you to add a new conversation between you and a contact or group. A contact or group id is required to create a conversation.\",\n                    \"Required attributes\",\n                    \"Unique identifier for the other contact in the conversation.\",\n                    \"Unique identifier for the group that the conversation belongs to.\"\n                ]\n            ],\n            [\n                \"Retrieve a conversation \",\n                \"retrieve-a-conversation\",\n                [\n                    \"This endpoint allows you to retrieve a conversation by providing the conversation id. Refer to the list at the top of this page to see which properties are included with conversation objects.\"\n                ]\n            ],\n            [\n                \"Update a conversation \",\n                \"update-a-conversation\",\n                [\n                    \"This endpoint allows you to perform an update on a conversation. Examples of updates are pinning a message, muting or archiving the conversation, or pinning the conversation itself.\",\n                    \"Optional attributes\",\n                    \"Unique identifier for the pinned message.\",\n                    \"Whether or not the conversation has been pinned.\",\n                    \"Whether or not the conversation has been muted.\",\n                    \"Timestamp of when the conversation was archived.\"\n                ]\n            ],\n            [\n                \"Delete a conversation \",\n                \"delete-a-conversation\",\n                [\n                    \"This endpoint allows you to delete your conversations in Protocol. Note: This will permanently delete the conversation and all its messages — archive it instead if you want to be able to restore it later.\"\n                ]\n            ]\n        ]\n    },\n    {\n        \"url\": \"/docs/errors\",\n        \"sections\": [\n            [\n                \"Errors\",\n                null,\n                [\n                    \"In this guide, we will talk about what happens when something goes wrong while you work with the API. Mistakes happen, and mostly they will be yours, not ours. Let's look at some status codes and error types you might encounter. \",\n                    \"You can tell if your request was successful by checking the status code when receiving an API response. If a response comes back unsuccessful, you can use the error type and error message to figure out what has gone wrong and do some rudimentary debugging (before contacting support).\",\n                    \"Before reaching out to support with an error, please be aware that 99% of all\\nreported errors are, in fact, user errors. Therefore, please carefully check\\nyour code before contacting Protocol support.\"\n                ]\n            ],\n            [\n                \"Status codes\",\n                \"status-codes\",\n                [\n                    \"Here is a list of the different categories of status codes returned by the Protocol API. Use these to understand if a request was successful.\",\n                    \"A 2xx status code indicates a successful response.\",\n                    \"A 4xx status code indicates a client error — this means it's a you\\nproblem.\",\n                    \"A 5xx status code indicates a server error — you won't be seeing these.\"\n                ]\n            ],\n            [\n                \"Error types\",\n                \"error-types\",\n                [\n                    \"Whenever a request is unsuccessful, the Protocol API will return an error response with an error type and message. You can use this information to understand better what has gone wrong and how to fix it. Most of the error messages are pretty helpful and actionable.\",\n                    \"Here is a list of the two error types supported by the Protocol API — use these to understand what you have done wrong.\",\n                    \"This means that we made an error, which is highly speculative and unlikely.\",\n                    \"This means that you made an error, which is much more likely.\"\n                ]\n            ]\n        ]\n    },\n    {\n        \"url\": \"/docs/groups\",\n        \"sections\": [\n            [\n                \"Groups\",\n                null,\n                [\n                    \"Groups are where communities live in Protocol — they are a collection of contacts you're talking to all at once. On this page, we'll dive into the different group endpoints you can use to manage groups programmatically. We'll look at how to query, create, update, and delete groups. \"\n                ]\n            ],\n            [\n                \"The group model\",\n                \"the-group-model\",\n                [\n                    \"The group model contains all the information about your groups, including what contacts are in the group and the group's name, description, and avatar.\",\n                    \"Properties\",\n                    \"Unique identifier for the group.\",\n                    \"The name for the group.\",\n                    \"The description for the group.\",\n                    \"The avatar image URL for the group.\",\n                    \"Unique identifier for the conversation that belongs to the group.\",\n                    \"An array of contact objects that are members of the group.\",\n                    \"Timestamp of when the group was created.\",\n                    \"Timestamp of when the group was archived.\"\n                ]\n            ],\n            [\n                \"List all groups \",\n                \"list-all-groups\",\n                [\n                    \"This endpoint allows you to retrieve a paginated list of all your groups. By default, a maximum of ten groups are shown per page.\",\n                    \"Optional attributes\",\n                    \"Limit the number of groups returned.\",\n                    \"Only show groups that are archived when set to true.\"\n                ]\n            ],\n            [\n                \"Create a group \",\n                \"create-a-group\",\n                [\n                    \"This endpoint allows you to create a new group conversation between you and a group of your Protocol contacts.\",\n                    \"Required attributes\",\n                    \"The name for the group.\",\n                    \"Optional attributes\",\n                    \"The description for the group.\",\n                    \"The avatar image URL for the group.\",\n                    \"An array of contact objects that are members of the group.\"\n                ]\n            ],\n            [\n                \"Retrieve a group \",\n                \"retrieve-a-group\",\n                [\n                    \"This endpoint allows you to retrieve a group by providing the group id. Refer to the list at the top of this page to see which properties are included with group objects.\"\n                ]\n            ],\n            [\n                \"Update a group \",\n                \"update-a-group\",\n                [\n                    \"This endpoint allows you to perform an update on a group. Examples of updates are changing the name, description, and avatar or adding and removing contacts from the group.\",\n                    \"Optional attributes\",\n                    \"The new name for the group.\",\n                    \"The new description for the group.\",\n                    \"The new avatar image URL for the group.\",\n                    \"An array of contact objects that are members of the group.\",\n                    \"Timestamp of when the group was archived.\"\n                ]\n            ],\n            [\n                \"Delete a group \",\n                \"delete-a-group\",\n                [\n                    \"This endpoint allows you to delete groups. Note: This will permanently delete the group, including the messages — archive it instead if you want to be able to restore it later.\"\n                ]\n            ]\n        ]\n    },\n    {\n        \"url\": \"/docs/messages\",\n        \"sections\": [\n            [\n                \"Messages\",\n                null,\n                [\n                    \"Messages are what conversations are made of in Protocol — they are the basic building blocks of your conversations with your Protocol contacts. On this page, we'll dive into the different message endpoints you can use to manage messages programmatically. We'll look at how to query, send, update, and delete messages. \"\n                ]\n            ],\n            [\n                \"The message model\",\n                \"the-message-model\",\n                [\n                    \"The message model contains all the information about the messages and attachments you send to your contacts and groups, including how your contacts have reacted to them.\",\n                    \"Properties\",\n                    \"Unique identifier for the message.\",\n                    \"Unique identifier for the conversation the message belongs to.\",\n                    \"The contact object for the contact who sent the message.\",\n                    \"The message content.\",\n                    \"An array of reaction objects associated with the message.\",\n                    \"An array of attachment objects associated with the message.\",\n                    \"Timestamp of when the message was read.\",\n                    \"Timestamp of when the message was created.\",\n                    \"Timestamp of when the message was last updated.\"\n                ]\n            ],\n            [\n                \"List all messages \",\n                \"list-all-messages\",\n                [\n                    \"This endpoint allows you to retrieve a paginated list of all your messages (in a conversation if a conversation id is provided). By default, a maximum of ten messages are shown per page.\",\n                    \"Optional attributes\",\n                    \"Limit to messages from a given conversation.\",\n                    \"Limit the number of messages returned.\"\n                ]\n            ],\n            [\n                \"Send a message \",\n                \"send-a-message\",\n                [\n                    \"This endpoint allows you to send a new message to one of your conversations.\",\n                    \"Required attributes\",\n                    \"Unique identifier for the conversation the message belongs to.\",\n                    \"The message content.\",\n                    \"Optional attributes\",\n                    \"An array of attachment objects associated with the message.\"\n                ]\n            ],\n            [\n                \"Retrieve a message \",\n                \"retrieve-a-message\",\n                [\n                    \"This endpoint allows you to retrieve a message by providing the message id. Refer to the list at the top of this page to see which properties are included with message objects.\"\n                ]\n            ],\n            [\n                \"Update a message \",\n                \"update-a-message\",\n                [\n                    \"This endpoint allows you to perform an update on a message. Examples of updates are adding a reaction, editing the message, or adding an attachment.\",\n                    \"Optional attributes\",\n                    \"The message content.\",\n                    \"An array of reaction objects associated with the message.\",\n                    \"An array of attachment objects associated with the message.\"\n                ]\n            ],\n            [\n                \"Delete a message \",\n                \"delete-a-message\",\n                [\n                    \"This endpoint allows you to delete messages from your conversations. Note: This will permanently delete the message.\"\n                ]\n            ]\n        ]\n    },\n    {\n        \"url\": \"/docs/pagination\",\n        \"sections\": [\n            [\n                \"Pagination\",\n                null,\n                [\n                    \"In this guide, we will look at how to work with paginated responses when querying the Protocol API. By default, all responses limit results to ten. However, you can go as high as 100 by adding a limit parameter to your requests. If you are using one of the official Protocol API client libraries, you don't need to worry about pagination, as it's all being taken care of behind the scenes. \",\n                    \"When an API response returns a list of objects, no matter the amount, pagination is supported. In paginated responses, objects are nested in a data attribute and have a has_more attribute that indicates whether you have reached the end of the last page. You can use the starting_after and endding_before query parameters to browse pages.\"\n                ]\n            ],\n            [\n                \"Example using cursors\",\n                \"example-using-cursors\",\n                [\n                    \"In this example, we request the page that starts after the conversation with id s4WycXedwhQrEFuM. As a result, we get a list of three conversations and can tell by the has_more attribute that we have reached the end of the resultset.\",\n                    \"The last ID on the page you're currently on when you want to fetch the next page.\",\n                    \"The first ID on the page you're currently on when you want to fetch the previous page.\",\n                    \"Limit the number of items returned.\"\n                ]\n            ]\n        ]\n    },\n    {\n        \"url\": \"/docs/quickstart\",\n        \"sections\": [\n            [\n                \"Quickstart\",\n                null,\n                [\n                    \"This guide will get you all set up and ready to use the Protocol API. We'll cover how to get started using one of our API clients and how to make your first API request. We'll also look at where to go next to find all the information you need to take full advantage of our powerful REST API. \",\n                    \"Before you can make requests to the Protocol API, you will need to grab your\\nAPI key from your dashboard. You find it under Settings » API.\"\n                ]\n            ],\n            [\n                \"Choose your client\",\n                \"choose-your-client\",\n                [\n                    \"Before making your first API request, you need to pick which API client you will use. In addition to good ol' cURL HTTP requests, Protocol offers clients for JavaScript, Python, and PHP. In the following example, you can see how to install each client.\",\n                    \"Check out our list of first-party SDKs\"\n                ]\n            ],\n            [\n                \"Making your first API request\",\n                \"making-your-first-api-request\",\n                [\n                    \"After picking your preferred client, you are ready to make your first call to the Protocol API. Below, you can see how to send a GET request to the Conversations endpoint to get a list of all your conversations. In the cURL example, results are limited to ten conversations, the default page length for each client.\",\n                    \"Read the docs for the Conversations endpoint\"\n                ]\n            ],\n            [\n                \"What's next?\",\n                \"whats-next\",\n                [\n                    \"Great, you're now set up with an API client and have made your first request to the API. Here are a few links that might be handy as you venture further into the Protocol API:\",\n                    \"Grab your API key from the Protocol dashboard\",\n                    \"Check out the Conversations endpoint\",\n                    \"Learn about the different error messages in Protocol\"\n                ]\n            ]\n        ]\n    },\n    {\n        \"url\": \"/docs/sdks\",\n        \"sections\": [\n            [\n                \"Protocol SDKs\",\n                null,\n                [\n                    \"The recommended way to interact with the Protocol API is by using one of our official SDKs. Today, Protocol offers fine-tuned JavaScript, Ruby, PHP, Python, and Go libraries to make your life easier and give you the best experience when consuming the API. \"\n                ]\n            ]\n        ]\n    },\n    {\n        \"url\": \"/docs/webhooks\",\n        \"sections\": [\n            [\n                \"Webhooks\",\n                null,\n                [\n                    \"In this guide, we will look at how to register and consume webhooks to integrate your app with Protocol. With webhooks, your app can know when something happens in Protocol, such as someone sending a message or adding a contact. \"\n                ]\n            ],\n            [\n                \"Registering webhooks\",\n                \"registering-webhooks\",\n                [\n                    \"To register a new webhook, you need to have a URL in your app that Protocol can call. You can configure a new webhook from the Protocol dashboard under API settings. Give your webhook a name, pick the events you want to listen for, and add your URL.\",\n                    \"Now, whenever something of interest happens in your app, a webhook is fired off by Protocol. In the next section, we'll look at how to consume webhooks.\"\n                ]\n            ],\n            [\n                \"Consuming webhooks\",\n                \"consuming-webhooks\",\n                [\n                    \"When your app receives a webhook request from Protocol, check the type attribute to see what event caused it. The first part of the event type will tell you the payload type, e.g., a conversation, message, etc.\",\n                    \"In the example above, a conversation was updated, and the payload type is a conversation.\",\n                    \"See all event types\"\n                ]\n            ],\n            [\n                \"Event types\",\n                \"event-types\",\n                [\n                    \"A new contact was created.\",\n                    \"An existing contact was updated.\",\n                    \"A contact was successfully deleted.\",\n                    \"A new conversation was created.\",\n                    \"An existing conversation was updated.\",\n                    \"A conversation was successfully deleted.\",\n                    \"A new message was created.\",\n                    \"An existing message was updated.\",\n                    \"A message was successfully deleted.\",\n                    \"A new group was created.\",\n                    \"An existing group was updated.\",\n                    \"A group was successfully deleted.\",\n                    \"A new attachment was created.\",\n                    \"An existing attachment was updated.\",\n                    \"An attachment was successfully deleted.\"\n                ]\n            ],\n            [\n                \"Security\",\n                \"security\",\n                [\n                    \"To know for sure that a webhook was, in fact, sent by Protocol instead of a malicious actor, you can verify the request signature. Each webhook request contains a header named x-protocol-signature, and you can verify this signature by using your secret webhook key. The signature is an HMAC hash of the request payload hashed using your secret key. Here is an example of how to verify the signature in your app:\",\n                    \"If your generated signature matches the x-protocol-signature header, you can be sure that the request was truly coming from Protocol. It's essential to keep your secret webhook key safe — otherwise, you can no longer be sure that a given webhook was sent by Protocol. Don't commit your secret webhook key to GitHub!\"\n                ]\n            ]\n        ]\n    }\n];\nfor (let { url, sections } of data){\n    for (let [title, hash, content] of sections){\n        sectionIndex.add({\n            url: url + (hash ? '#' + hash : ''),\n            title,\n            content: [\n                title,\n                ...content\n            ].join('\\n'),\n            pageTitle: hash ? sections[0][0] : undefined\n        });\n    }\n}\nfunction search(query) {\n    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    let result = sectionIndex.search(query, {\n        ...options,\n        enrich: true\n    });\n    if (result.length === 0) {\n        return [];\n    }\n    return result[0].result.map((item)=>({\n            url: item.id,\n            title: item.doc.title,\n            pageTitle: item.doc.pageTitle\n        }));\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = __webpack_module__.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                __webpack_module__.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                __webpack_module__.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        __webpack_module__.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    __webpack_module__.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/mdx/search.mjs\n"));

/***/ })

}]);