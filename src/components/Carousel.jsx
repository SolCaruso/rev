"use client";

import React from "react";
import { motion } from "framer-motion";

// 1) Define an inline SVG component for "Sharp Picks"
function SharpPicksIcon() {
  return (
    <svg
      // So the SVG scales to fill its container:
      width="100%"
      height="100%"
      viewBox="0 0 68 68"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <g clipPath="url(#clip0_1_1108)">
        <path
          d="M34.3203 20.3453C26.6237 20.3453 20.362 26.607 20.362 34.3036C20.362 42.0002 26.6237 48.2619 34.3203 48.2619C42.0169 48.2619 48.2786 42.0002 48.2786 34.3036C48.2786 26.607 42.0169 20.3453 34.3203 20.3453ZM34.3203 42.6786C29.7029 42.6786 25.9453 38.921 25.9453 34.3036C25.9453 29.6862 29.7029 25.9286 34.3203 25.9286C38.9377 25.9286 42.6953 29.6862 42.6953 34.3036C42.6953 38.921 38.9377 42.6786 34.3203 42.6786ZM65.0286 31.5119H62.0974C60.7825 18.3436 50.2803 7.83859 37.112 6.52651V3.59526C37.112 2.05146 35.8613 0.803589 34.3203 0.803589C32.7793 0.803589 31.5286 2.05146 31.5286 3.59526V6.52651C18.3604 7.83859 7.85531 18.3436 6.54323 31.5119H3.61198C2.07098 31.5119 0.820312 32.7598 0.820312 34.3036C0.820312 35.8474 2.07098 37.0953 3.61198 37.0953H6.54323C7.8581 50.2635 18.3604 60.7686 31.5286 62.0807V65.0119C31.5286 66.5557 32.7793 67.8036 34.3203 67.8036C35.8613 67.8036 37.112 66.5557 37.112 65.0119V62.0807C50.2803 60.7658 60.7853 50.2635 62.0974 37.0953H65.0286C66.5696 37.0953 67.8203 35.8474 67.8203 34.3036C67.8203 32.7598 66.5696 31.5119 65.0286 31.5119ZM34.3203 56.6369C22.0063 56.6369 11.987 46.6176 11.987 34.3036C11.987 21.9895 22.0063 11.9703 34.3203 11.9703C46.6344 11.9703 56.6536 21.9895 56.6536 34.3036C56.6536 46.6176 46.6344 56.6369 34.3203 56.6369Z"
          fill="url(#paint0_linear_1_1108)"
        />
      </g>
      <defs>
        <linearGradient
          id="paint0_linear_1_1108"
          x1="3.63753"
          y1="34.3036"
          x2="64.8816"
          y2="34.3036"
          gradientUnits="userSpaceOnUse"
        >
          <stop stopColor="#FF494D" />
          <stop offset="1" stopColor="#FF6F6E" />
        </linearGradient>
        <clipPath id="clip0_1_1108">
          <rect
            width="67"
            height="67"
            fill="white"
            transform="translate(0.820312 0.803589)"
          />
        </clipPath>
      </defs>
    </svg>
  );
}

function BettorsClubIcon () {
  return (
    <svg width="68" height="68" viewBox="0 0 68 68" fill="none" xmlns="http://www.w3.org/2000/svg">
<g clipPath="url(#clip0_1_1110)">
<path d="M58.5283 5.58851C56.6551 3.99167 54.1733 3.30771 51.7194 3.70692C50.7395 3.86605 49.8211 4.21221 48.9892 4.70076C47.5012 2.36413 44.9049 0.803589 41.9374 0.803589C39.785 0.803589 37.8392 1.64388 36.3541 2.98109C34.8689 1.64109 32.9231 0.803589 30.7707 0.803589C27.7976 0.803589 25.1958 2.37251 23.7106 4.71471C22.4907 4.02238 21.1032 3.59526 19.6041 3.59526C14.9867 3.59526 11.2291 7.35284 11.2291 11.9703V19.611L7.17557 23.578C4.3169 26.4283 2.73961 30.2222 2.73682 34.2589C2.73403 38.2985 4.30574 42.0923 7.23978 45.0264L18.7052 55.6291C19.2774 56.1568 19.6041 56.9049 19.6041 57.681V65.0091C19.6041 66.5529 20.8547 67.8008 22.3957 67.8008C23.9367 67.8008 25.1874 66.5529 25.1874 65.0091V57.681C25.1874 55.3555 24.2075 53.1138 22.499 51.531L11.109 41.0036C9.3084 39.203 8.31736 36.8105 8.32015 34.2645C8.32015 31.7213 9.31399 29.3288 11.1007 27.5505L17.3875 21.3949C18.4762 20.309 20.2434 20.309 21.3321 21.3949C21.8597 21.9225 22.1501 22.6233 22.1501 23.3714C22.1501 24.1196 21.8597 24.8203 21.3461 25.3284L14.7382 31.8078C13.6355 32.8882 13.6215 34.6553 14.6991 35.7553C15.7767 36.8552 17.5438 36.8719 18.6465 35.7943L25.2712 29.2981C26.8568 27.718 27.7306 25.6131 27.7306 23.3742C27.7306 23.0839 27.6776 22.8019 27.6469 22.5172C28.6128 22.908 29.6624 23.1341 30.7679 23.1341C32.9203 23.1341 34.8661 22.2938 36.3513 20.9566C37.8364 22.2966 39.7822 23.1341 41.9346 23.1341C44.087 23.1341 46.0328 22.2938 47.5179 20.9566C49.0031 22.2966 50.9489 23.1341 53.1013 23.1341C54.0812 23.1341 55.0192 22.9638 55.8929 22.6568V37.0506C55.8929 40.2498 55.0555 43.4016 53.4698 46.1793C51.4039 49.7945 50.3096 53.9123 50.3096 58.0774V65.0119C50.3096 66.5557 51.5603 67.8036 53.1013 67.8036C54.6423 67.8036 55.8929 66.5557 55.8929 65.0119V58.0774C55.8929 54.8782 56.7304 51.7264 58.3161 48.9487C60.382 45.3335 61.4763 41.2158 61.4763 37.0506V11.9703C61.4763 9.5108 60.4015 7.18534 58.5255 5.58851H58.5283ZM22.3957 15.5771C20.6035 14.882 18.6326 14.8513 16.8124 15.4291V11.9675C16.8124 10.4293 18.0659 9.1758 19.6041 9.1758C21.1423 9.1758 22.3957 10.4293 22.3957 11.9675V15.5771ZM33.5624 14.7591C33.5624 16.2973 32.3089 17.5508 30.7707 17.5508C29.2325 17.5508 27.9791 16.2973 27.9791 14.7591V9.1758C27.9791 7.63759 29.2325 6.38413 30.7707 6.38413C32.3089 6.38413 33.5624 7.63759 33.5624 9.1758V14.7591ZM44.7291 14.7591C44.7291 16.2973 43.4756 17.5508 41.9374 17.5508C40.3992 17.5508 39.1457 16.2973 39.1457 14.7591V9.1758C39.1457 7.63759 40.3992 6.38413 41.9374 6.38413C43.4756 6.38413 44.7291 7.63759 44.7291 9.1758V14.7591ZM55.8957 14.7591C55.8957 16.2973 54.6423 17.5508 53.1041 17.5508C51.5659 17.5508 50.3124 16.2973 50.3124 14.7591L50.2594 12.0484C50.2287 10.4711 51.4989 9.1758 53.0762 9.1758C54.6311 9.1758 55.8929 10.4376 55.8929 11.9926L55.8957 14.7591Z" fill="url(#paint0_linear_1_1110)"/>
</g>
<defs>
<linearGradient id="paint0_linear_1_1110" x1="5.20669" y1="34.3036" x2="58.8999" y2="34.3036" gradientUnits="userSpaceOnUse">
<stop stopColor="#FF494D"/>
<stop offset="1" stopColor="#FF6F6E"/>
</linearGradient>
<clipPath id="clip0_1_1110">
<rect width="67" height="67" fill="white" transform="translate(0.0625 0.803589)"/>
</clipPath>
</defs>
</svg>

  );
}

function TokenAirdropIcon() {
  return (
<svg width="68" height="68" viewBox="0 0 68 68" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M62.8534 26.5487C60.4788 13.9685 48.154 4.83604 33.5553 4.83604C18.9566 4.83604 6.63181 13.9685 4.25721 26.5487C3.64576 29.7754 4.69186 33.0831 7.06891 35.4111L21.8567 49.6218C21.4834 50.5844 21.2796 51.628 21.2796 52.7208V55.1764C21.2796 59.9158 25.135 63.7711 29.8743 63.7711H37.2412C41.9806 63.7711 45.8359 59.9158 45.8359 55.1764V52.7208C45.8359 51.628 45.6296 50.5844 45.2588 49.6218L60.0614 35.3963C62.4212 33.0831 63.4673 29.7754 62.8559 26.5463L62.8534 26.5487ZM56.3877 22.578C55.4423 22.2342 54.3815 22.0254 53.2003 22.0254C50.2708 22.0254 47.5426 23.268 45.4676 24.5916C44.5222 18.455 41.9094 13.6346 39.5446 10.3588C47.1251 11.9402 53.3649 16.4659 56.3877 22.578ZM35.1981 44.1261H31.9125L26.4831 30.188C28.0891 28.83 30.9106 26.9367 33.5529 26.9367C36.1951 26.9367 39.0215 28.8324 40.6251 30.1855L35.1981 44.1261ZM26.7434 24.0366C28.0793 17.652 31.5171 13.0428 33.5553 10.7713C35.5935 13.0452 39.0314 17.6544 40.3672 24.0366C38.4346 22.9414 36.0699 22.0254 33.5553 22.0254C31.0408 22.0254 28.676 22.9414 26.7434 24.0366ZM27.566 10.3588C25.2013 13.6346 22.5885 18.455 21.6431 24.5916C19.5681 23.268 16.8374 22.0254 13.9103 22.0254C12.7291 22.0254 11.6683 22.2342 10.7229 22.578C13.7458 16.4659 19.988 11.9402 27.566 10.3588ZM9.28388 29.9989C10.0721 28.7072 11.575 26.9342 13.9103 26.9342C16.7613 26.9342 19.821 29.1369 21.3337 30.49L26.8564 44.6713C26.1516 44.9365 25.491 45.2901 24.8869 45.7223L10.4896 31.8848C9.93708 31.3446 9.53436 30.6987 9.28388 29.9989ZM40.9222 55.174C40.9222 57.2048 39.2696 58.8574 37.2388 58.8574H29.8719C27.8411 58.8574 26.1884 57.2048 26.1884 55.174V52.7183C26.1884 50.6875 27.8411 49.0349 29.8719 49.0349H37.2388C39.2696 49.0349 40.9222 50.6875 40.9222 52.7183V55.174ZM42.2237 45.7223C41.6196 45.2925 40.959 44.9365 40.2543 44.6713L45.777 30.49C47.2921 29.132 50.3494 26.9342 53.2003 26.9342C55.5356 26.9342 57.0409 28.7072 57.8292 30.0013C57.5812 30.6963 57.1809 31.3396 56.6382 31.8701L42.2261 45.7223H42.2237Z" fill="url(#paint0_linear_1_1114)"/>
<defs>
<linearGradient id="paint0_linear_1_1114" x1="6.5643" y1="34.3036" x2="60.442" y2="34.3036" gradientUnits="userSpaceOnUse">
<stop stopColor="#FF494D"/>
<stop offset="1" stopColor="#FF6F6E"/>
</linearGradient>
</defs>
</svg>


  );
}

function WinPotentialIcon() {
  return (
<svg width="68" height="68" viewBox="0 0 68 68" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M33.959 0.354004C15.4865 0.354004 0.458984 15.3815 0.458984 33.854C0.458984 52.3265 15.4865 67.354 33.959 67.354C52.4314 67.354 67.459 52.3265 67.459 33.854C67.459 15.3815 52.4314 0.354004 33.959 0.354004ZM33.959 61.7707C18.5657 61.7707 6.04232 49.2473 6.04232 33.854C6.04232 18.4608 18.5657 5.93734 33.959 5.93734C49.3522 5.93734 61.8757 18.4608 61.8757 33.854C61.8757 49.2473 49.3522 61.7707 33.959 61.7707ZM28.3757 28.2707C28.3757 29.3259 29.1322 30.2193 30.1735 30.3923L38.6629 31.8077C42.4094 32.4303 45.1257 35.6407 45.1257 39.4373C45.1257 44.0548 41.3681 47.8123 36.7507 47.8123V53.3957H31.1673V47.8123C26.5499 47.8123 22.7923 44.0548 22.7923 39.4373H28.3757C28.3757 40.9783 29.6263 42.229 31.1673 42.229H36.7507C38.2917 42.229 39.5423 40.9783 39.5423 39.4373C39.5423 38.3821 38.7858 37.4888 37.7445 37.3157L29.255 35.9003C25.5086 35.2778 22.7923 32.0673 22.7923 28.2707C22.7923 23.6533 26.5499 19.8957 31.1673 19.8957V14.3123H36.7507V19.8957C41.3681 19.8957 45.1257 23.6533 45.1257 28.2707H39.5423C39.5423 26.7325 38.2917 25.479 36.7507 25.479H31.1673C29.6263 25.479 28.3757 26.7325 28.3757 28.2707Z" fill="url(#paint0_linear_1_1213)"/>
<defs>
<linearGradient id="paint0_linear_1_1213" x1="3.2762" y1="33.854" x2="64.5202" y2="33.854" gradientUnits="userSpaceOnUse">
<stop stopColor="#FF494D"/>
<stop offset="1" stopColor="#FF6F6E"/>
</linearGradient>
</defs>
</svg>



  );
}

function PickAccessIcon() {
  return (
<svg width="58" height="58" viewBox="0 0 58 58" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M57.7988 24.0285C57.7989 23.8531 57.7796 23.6782 57.7412 23.5071L54.6175 9.40729C54.0371 6.73111 52.5543 4.33583 50.4176 2.62309C48.281 0.91035 45.6204 -0.0157058 42.882 0.000201571H15.0476C12.3109 -0.0134953 9.65264 0.91357 7.51796 2.62613C5.38327 4.33868 3.90186 6.73273 3.32182 9.40729L0.188531 23.5071C0.150105 23.6782 0.130764 23.8531 0.130863 24.0285V26.4314C0.128924 28.7707 0.983679 31.0298 2.53369 32.782V45.654C2.53751 48.8392 3.80451 51.8928 6.05677 54.1451C8.30904 56.3974 11.3627 57.6643 14.5479 57.6682H43.3818C46.567 57.6643 49.6207 56.3974 51.8729 54.1451C54.1252 51.8928 55.3922 48.8392 55.396 45.654V32.782C56.946 31.0298 57.8008 28.7707 57.7988 26.4314V24.0285ZM4.93653 24.2904L8.01215 10.4501C8.36067 8.84563 9.24965 7.40951 10.5303 6.38207C11.811 5.35462 13.4058 4.79818 15.0476 4.80587H16.9507V12.0144C16.9507 12.6516 17.2038 13.2628 17.6545 13.7134C18.1051 14.164 18.7162 14.4172 19.3535 14.4172C19.9908 14.4172 20.602 14.164 21.0526 13.7134C21.5032 13.2628 21.7563 12.6516 21.7563 12.0144V4.80587H36.1733V12.0144C36.1733 12.6516 36.4265 13.2628 36.8771 13.7134C37.3277 14.164 37.9389 14.4172 38.5762 14.4172C39.2134 14.4172 39.8246 14.164 40.2752 13.7134C40.7259 13.2628 40.979 12.6516 40.979 12.0144V4.80587H42.882C44.5239 4.79818 46.1186 5.35462 47.3993 6.38207C48.68 7.40951 49.569 8.84563 49.9175 10.4501L52.9932 24.2904V26.4314C52.9932 27.7059 52.4869 28.9282 51.5856 29.8295C50.6844 30.7307 49.462 31.237 48.1875 31.237H45.7847C44.5101 31.237 43.2878 30.7307 42.3866 29.8295C41.4853 28.9282 40.979 27.7059 40.979 26.4314C40.979 25.7941 40.7259 25.1829 40.2752 24.7323C39.8246 24.2817 39.2134 24.0285 38.5762 24.0285C37.9389 24.0285 37.3277 24.2817 36.8771 24.7323C36.4265 25.1829 36.1733 25.7941 36.1733 26.4314C36.1733 27.7059 35.667 28.9282 34.7658 29.8295C33.8646 30.7307 32.6422 31.237 31.3677 31.237H26.562C25.2875 31.237 24.0651 30.7307 23.1639 29.8295C22.2627 28.9282 21.7563 27.7059 21.7563 26.4314C21.7563 25.7941 21.5032 25.1829 21.0526 24.7323C20.602 24.2817 19.9908 24.0285 19.3535 24.0285C18.7162 24.0285 18.1051 24.2817 17.6545 24.7323C17.2038 25.1829 16.9507 25.7941 16.9507 26.4314C16.9507 27.7059 16.4444 28.9282 15.5431 29.8295C14.6419 30.7307 13.4196 31.237 12.145 31.237H9.74219C8.46765 31.237 7.24531 30.7307 6.34407 29.8295C5.44284 28.9282 4.93653 27.7059 4.93653 26.4314V24.2904ZM43.3818 52.8625H14.5479C12.636 52.8625 10.8025 52.103 9.45068 50.7512C8.09882 49.3993 7.33936 47.5658 7.33936 45.654V35.7375C8.12412 35.9407 8.93155 36.0433 9.74219 36.0427H12.145C13.5094 36.0434 14.8582 35.7529 16.1013 35.1906C17.3444 34.6283 18.4532 33.8072 19.3535 32.782C20.2539 33.8072 21.3626 34.6283 22.6057 35.1906C23.8488 35.7529 25.1976 36.0434 26.562 36.0427H31.3677C32.732 36.0434 34.0808 35.7529 35.3239 35.1906C36.5671 34.6283 37.6758 33.8072 38.5762 32.782C39.4765 33.8072 40.5853 34.6283 41.8284 35.1906C43.0715 35.7529 44.4203 36.0434 45.7847 36.0427H48.1875C48.9981 36.0433 49.8056 35.9407 50.5903 35.7375V45.654C50.5903 47.5658 49.8309 49.3993 48.479 50.7512C47.1272 52.103 45.2936 52.8625 43.3818 52.8625Z" fill="url(#paint0_linear_1_1242)"/>
<defs>
<linearGradient id="paint0_linear_1_1242" x1="2.55568" y1="28.8341" x2="55.2694" y2="28.8341" gradientUnits="userSpaceOnUse">
<stop stopColor="#FF494D"/>
<stop offset="1" stopColor="#FF6F6E"/>
</linearGradient>
</defs>
</svg>

  );
}

/** Custom hook to detect if screen width < 640px (Tailwind 'sm') */
function useIsSmallScreen() {
  const [isSmall, setIsSmall] = React.useState(false);

  React.useEffect(() => {
    function handleResize() {
      setIsSmall(window.innerWidth < 640);
    }
    // Run once on mount
    handleResize();
    // Listen on resize
    window.addEventListener("resize", handleResize);
    return () => window.removeEventListener("resize", handleResize);
  }, []);

  return isSmall;
}

// 2) Team data
const team = [
  {
    id: 1,
    name: "Sharp Picks",
    title: "Our Edge",
    icon: <SharpPicksIcon />,
  },
  {
    id: 2,
    name: "Win Potential",
    title: "Long Term",
    icon: <WinPotentialIcon />,
  },
  {
    id: 3,
    name: "Pick Access",
    title: "Members Only",
    icon: <PickAccessIcon />,
  },
  {
    id: 4,
    name: "NFT Bettors Club",
    title: "Private Access",
    icon: <BettorsClubIcon />,
  },
  {
    id: 5,
    name: "Token Airdrop",
    title: "Community Gains",
    icon: <TokenAirdropIcon />,
  },
];

// 3) Circular offset helper
function getCircularOffset(i, activeIndex, length) {
  let offset = i - activeIndex;
  offset = ((offset % length) + length) % length;
  if (offset > length / 2) {
    offset -= length;
  }
  return offset;
}

export default function Carousel({ activeIndex, setActiveIndex }) {
  const isSmallScreen = useIsSmallScreen();

  // If screen is smaller than 640px, use a smaller gap (e.g. 180). Otherwise, 260.
  const gap = isSmallScreen ? 180 : 260;

  return (
    <div className="relative flex justify-center items-center w-4/5 mx-auto min-h-[250px] mb-8 select-none overflow-hidden">
      {team.map((person, i) => {
        const offset = getCircularOffset(i, activeIndex, team.length);
        const isActive = offset === 0;
        const isLeft = offset === -1;
        const isRight = offset === 1;

        return (
          <motion.div
            key={person.id}
            onClick={() => setActiveIndex(i)}
            initial={false}
            animate={{
              x: offset * gap, // uses the smaller or larger gap
              scale: isActive ? 1.05 : 0.95,
              opacity: offset === 0 ? 1 : Math.abs(offset) === 1 ? 0.6 : 0,
            }}
            transition={{
              type: "spring",
              stiffness: 100,
              damping: 25,
            }}
            className={`
              absolute
              grid
              grid-cols-[auto_1fr] 
              grid-rows-[auto_auto]
              gap-x-3
              gap-y-1
              sm:py-5
              sm:px-6
              py-3
              px-4
              text-[12px]
              sm:text-[14px]
              font-semibold
              leading-tight
              sm:leading-normal
              tracking-[0.3px]
              rounded-2xl
              ${
                isActive
                  ? // Middle (active) card
                    `
                      bg-[linear-gradient(137deg,#111214_4.87%,#0c0d0f_75.88%)]
                      border-t border-r border-l border-[hsla(0,0%,100%,0.06)]
                      shadow-[inset_0_1px_1px_0_rgba(255,255,255,0.1),_0_2px_40px_10px_rgba(154,170,255,0.05),_0_0_16px_-7px_rgba(154,170,255,0.05)]
                      hover:shadow-none
                      transition-shadow
                      duration-200
                    `
                  : // Inactive (left/right/far) card
                    `
                      bg-gray-800/20
                      border-transparent
                      ${
                        isLeft
                          ? "border-r border-t hover:border-gray-600/40"
                          : isRight
                          ? "border-l border-t hover:border-gray-600/40"
                          : "border-l border-t"
                      }
                      transition-[border-color,border-width] duration-200
                    `
              }
              ${
                Math.abs(offset) <= 1
                  ? "cursor-pointer"
                  : "pointer-events-none cursor-default"
              }
            `}
            style={{
              gridTemplateAreas: `"avatar name" "avatar title"`,
            }}
          >
            {/* SVG Container */}
            <div
              style={{ gridArea: "avatar" }}
              className="col-[avatar] row-span-2 sm:w-12 sm:h-12 h-8 w-8 self-center flex items-center justify-center sm:pr-2"
            >
              {person.icon}
            </div>

            {/* Name */}
            <div
              className="flex items-center text-gray-100"
              style={{ gridArea: "name" }}
            >
              {person.name}
            </div>

            {/* Title */}
            <span className="text-gray-400" style={{ gridArea: "title" }}>
              {person.title}
            </span>
          </motion.div>
        );
      })}
    </div>
  );
}